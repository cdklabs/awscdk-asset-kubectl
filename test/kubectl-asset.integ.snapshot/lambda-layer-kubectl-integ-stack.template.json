{
 "Resources": {
  "KubectlLayer600207B5": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "e35d06c04a5f086530cad7876451b9fbd93ded1d4940950bb104fb78dd322310.zip"
    },
    "Description": "/opt/kubectl/kubectl and /opt/helm/helm"
   }
  },
  "Lambdapython39ServiceRoleE2CFED77": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "Lambdapython39426A0480": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "134b81dc12f7bd57e63ba8a0ab049586c8a5e07e7afce1e400dc6e1319e9abfb.zip"
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "KubectlLayer600207B5"
     }
    ],
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "Lambdapython39ServiceRoleE2CFED77",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 30
   },
   "DependsOn": [
    "Lambdapython39ServiceRoleE2CFED77"
   ]
  },
  "Providerpython39frameworkonEventServiceRoleA299F5C1": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "Providerpython39frameworkonEventServiceRoleDefaultPolicy16A4767C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "Lambdapython39426A0480",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "Lambdapython39426A0480",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "Providerpython39frameworkonEventServiceRoleDefaultPolicy16A4767C",
    "Roles": [
     {
      "Ref": "Providerpython39frameworkonEventServiceRoleA299F5C1"
     }
    ]
   }
  },
  "Providerpython39frameworkonEvent00AFA742": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "4dc48ffba382f93077a1e6824599bbd4ceb6f91eb3d9442eca3b85bdb1a20b1e.zip"
    },
    "Description": "AWS CDK resource provider framework - onEvent (lambda-layer-kubectl-integ-stack/Providerpython3.9)",
    "Environment": {
     "Variables": {
      "USER_ON_EVENT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "Lambdapython39426A0480",
        "Arn"
       ]
      }
     }
    },
    "Handler": "framework.onEvent",
    "Role": {
     "Fn::GetAtt": [
      "Providerpython39frameworkonEventServiceRoleA299F5C1",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Timeout": 900
   },
   "DependsOn": [
    "Providerpython39frameworkonEventServiceRoleDefaultPolicy16A4767C",
    "Providerpython39frameworkonEventServiceRoleA299F5C1"
   ]
  },
  "CustomResourcepython39": {
   "Type": "AWS::CloudFormation::CustomResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "Providerpython39frameworkonEvent00AFA742",
      "Arn"
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "Lambdapython312ServiceRoleAEE8F417": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "Lambdapython312DDA13323": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "134b81dc12f7bd57e63ba8a0ab049586c8a5e07e7afce1e400dc6e1319e9abfb.zip"
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "KubectlLayer600207B5"
     }
    ],
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "Lambdapython312ServiceRoleAEE8F417",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Timeout": 30
   },
   "DependsOn": [
    "Lambdapython312ServiceRoleAEE8F417"
   ]
  },
  "Providerpython312frameworkonEventServiceRoleA5AFFB7F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "Providerpython312frameworkonEventServiceRoleDefaultPolicy8FBA03B4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "Lambdapython312DDA13323",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "Lambdapython312DDA13323",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "Providerpython312frameworkonEventServiceRoleDefaultPolicy8FBA03B4",
    "Roles": [
     {
      "Ref": "Providerpython312frameworkonEventServiceRoleA5AFFB7F"
     }
    ]
   }
  },
  "Providerpython312frameworkonEvent9712A9EB": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "4dc48ffba382f93077a1e6824599bbd4ceb6f91eb3d9442eca3b85bdb1a20b1e.zip"
    },
    "Description": "AWS CDK resource provider framework - onEvent (lambda-layer-kubectl-integ-stack/Providerpython3.12)",
    "Environment": {
     "Variables": {
      "USER_ON_EVENT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "Lambdapython312DDA13323",
        "Arn"
       ]
      }
     }
    },
    "Handler": "framework.onEvent",
    "Role": {
     "Fn::GetAtt": [
      "Providerpython312frameworkonEventServiceRoleA5AFFB7F",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Timeout": 900
   },
   "DependsOn": [
    "Providerpython312frameworkonEventServiceRoleDefaultPolicy8FBA03B4",
    "Providerpython312frameworkonEventServiceRoleA5AFFB7F"
   ]
  },
  "CustomResourcepython312": {
   "Type": "AWS::CloudFormation::CustomResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "Providerpython312frameworkonEvent9712A9EB",
      "Arn"
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  }
 },
 "Mappings": {
  "LatestNodeRuntimeMap": {
   "af-south-1": {
    "value": "nodejs20.x"
   },
   "ap-east-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-2": {
    "value": "nodejs20.x"
   },
   "ap-northeast-3": {
    "value": "nodejs20.x"
   },
   "ap-south-1": {
    "value": "nodejs20.x"
   },
   "ap-south-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-1": {
    "value": "nodejs20.x"
   },
   "ap-southeast-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-3": {
    "value": "nodejs20.x"
   },
   "ap-southeast-4": {
    "value": "nodejs20.x"
   },
   "ap-southeast-5": {
    "value": "nodejs20.x"
   },
   "ap-southeast-7": {
    "value": "nodejs20.x"
   },
   "ca-central-1": {
    "value": "nodejs20.x"
   },
   "ca-west-1": {
    "value": "nodejs20.x"
   },
   "cn-north-1": {
    "value": "nodejs18.x"
   },
   "cn-northwest-1": {
    "value": "nodejs18.x"
   },
   "eu-central-1": {
    "value": "nodejs20.x"
   },
   "eu-central-2": {
    "value": "nodejs20.x"
   },
   "eu-isoe-west-1": {
    "value": "nodejs18.x"
   },
   "eu-north-1": {
    "value": "nodejs20.x"
   },
   "eu-south-1": {
    "value": "nodejs20.x"
   },
   "eu-south-2": {
    "value": "nodejs20.x"
   },
   "eu-west-1": {
    "value": "nodejs20.x"
   },
   "eu-west-2": {
    "value": "nodejs20.x"
   },
   "eu-west-3": {
    "value": "nodejs20.x"
   },
   "il-central-1": {
    "value": "nodejs20.x"
   },
   "me-central-1": {
    "value": "nodejs20.x"
   },
   "me-south-1": {
    "value": "nodejs20.x"
   },
   "mx-central-1": {
    "value": "nodejs20.x"
   },
   "sa-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-2": {
    "value": "nodejs20.x"
   },
   "us-gov-east-1": {
    "value": "nodejs18.x"
   },
   "us-gov-west-1": {
    "value": "nodejs18.x"
   },
   "us-iso-east-1": {
    "value": "nodejs18.x"
   },
   "us-iso-west-1": {
    "value": "nodejs18.x"
   },
   "us-isob-east-1": {
    "value": "nodejs18.x"
   },
   "us-west-1": {
    "value": "nodejs20.x"
   },
   "us-west-2": {
    "value": "nodejs20.x"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}